steps:
  # Étape de construction de l'image Docker pour le service Symfony
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/symfony:v1', '.']

  # Étape de poussée de l'image sur Google Container Registry ou Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/symfony:v1']

  # Utilisation de Kompose pour convertir docker-compose.yml en fichiers Kubernetes
  - name: 'gcr.io/k8s-skaffold/kompose'
    args: ['convert', '-f', 'docker-compose.yml', '--stdout']

# Appliquer les configurations Kubernetes sur GKE
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials nom-du-cluster --region region-du-cluster &&
        kubectl apply -f k8s/
            
  # Étape de déploiement du service Symfony sur Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'symfony'
      - '--image=gcr.io/$PROJECT_ID/symfony:v1'
      - '--add-cloudsql-instances=INSTANCE_CONNECTION_NAME'  # Remplacez par votre nom de connexion d'instance Cloud SQL
      - '--set-env-vars=DATABASE_URL=pgsql://root:root@/cloudsql/INSTANCE_CONNECTION_NAME/stackT1,STRIPE_PRIVATE_KEY=$_STRIPE_PRIVATE_KEY'  # Assurez-vous que cette variable est correctement configurée
      - '--region=us-central1'  # Remplacez par votre région de déploiement
      - '--platform=managed'
      - '--allow-unauthenticated'  # Considérez l'utilisation de l'authentification selon vos besoins de sécurité
    secretEnv: ['STRIPE_PRIVATE_KEY']

  # Définissez ici des étapes supplémentaires si nécessaire pour d'autres services ou configurations

timeout: '1800s'  # Temps total alloué pour le processus de build complet

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/stripe_private_key/versions/latest
      env: 'STRIPE_PRIVATE_KEY'
